<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.it.ssm.act.dao.LeaveBillCommentMapper">
    <resultMap id="BaseResultMap" type="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        <!--@Table ac_leave_bill_comment-->
        <id column="task_id" jdbcType="VARCHAR" property="taskId"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId"/>
        <result column="assign_id" jdbcType="VARCHAR" property="assignId"/>
        <result column="assign_user" jdbcType="VARCHAR" property="assignUser"/>
        <result column="approve" jdbcType="INTEGER" property="approve"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        task_id, task_name, process_instance_id, assign_id, assign_user, approve, `comment`
    </sql>
    <select id="selectByExample" parameterType="cn.it.ssm.act.entity.LeaveBillCommentExample" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ac_leave_bill_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from ac_leave_bill_comment
        where task_id = #{taskId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from ac_leave_bill_comment
        where task_id = #{taskId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="cn.it.ssm.act.entity.LeaveBillCommentExample">
        <!--@mbg.generated-->
        delete from ac_leave_bill_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        insert into ac_leave_bill_comment (task_id, task_name, process_instance_id,
        assign_id, assign_user, approve,
        `comment`)
        values (#{taskId,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{processInstanceId,jdbcType=VARCHAR},
        #{assignId,jdbcType=VARCHAR}, #{assignUser,jdbcType=VARCHAR}, #{approve,jdbcType=INTEGER},
        #{comment,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        insert into ac_leave_bill_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null and taskId != ''">
                task_id,
            </if>
            <if test="taskName != null and taskName != ''">
                task_name,
            </if>
            <if test="processInstanceId != null and processInstanceId != ''">
                process_instance_id,
            </if>
            <if test="assignId != null and assignId != ''">
                assign_id,
            </if>
            <if test="assignUser != null and assignUser != ''">
                assign_user,
            </if>
            <if test="approve != null">
                approve,
            </if>
            <if test="comment != null and comment != ''">
                `comment`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null and taskId != ''">
                #{taskId,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null and taskName != ''">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="processInstanceId != null and processInstanceId != ''">
                #{processInstanceId,jdbcType=VARCHAR},
            </if>
            <if test="assignId != null and assignId != ''">
                #{assignId,jdbcType=VARCHAR},
            </if>
            <if test="assignUser != null and assignUser != ''">
                #{assignUser,jdbcType=VARCHAR},
            </if>
            <if test="approve != null">
                #{approve,jdbcType=INTEGER},
            </if>
            <if test="comment != null and comment != ''">
                #{comment,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.it.ssm.act.entity.LeaveBillCommentExample" resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from ac_leave_bill_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update ac_leave_bill_comment
        <set>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=VARCHAR},
            </if>
            <if test="record.taskName != null">
                task_name = #{record.taskName,jdbcType=VARCHAR},
            </if>
            <if test="record.processInstanceId != null">
                process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
            </if>
            <if test="record.assignId != null">
                assign_id = #{record.assignId,jdbcType=VARCHAR},
            </if>
            <if test="record.assignUser != null">
                assign_user = #{record.assignUser,jdbcType=VARCHAR},
            </if>
            <if test="record.approve != null">
                approve = #{record.approve,jdbcType=INTEGER},
            </if>
            <if test="record.comment != null">
                `comment` = #{record.comment,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update ac_leave_bill_comment
        set task_id = #{record.taskId,jdbcType=VARCHAR},
        task_name = #{record.taskName,jdbcType=VARCHAR},
        process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
        assign_id = #{record.assignId,jdbcType=VARCHAR},
        assign_user = #{record.assignUser,jdbcType=VARCHAR},
        approve = #{record.approve,jdbcType=INTEGER},
        `comment` = #{record.comment,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        update ac_leave_bill_comment
        <set>
            <if test="taskName != null and taskName != ''">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="processInstanceId != null and processInstanceId != ''">
                process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
            </if>
            <if test="assignId != null and assignId != ''">
                assign_id = #{assignId,jdbcType=VARCHAR},
            </if>
            <if test="assignUser != null and assignUser != ''">
                assign_user = #{assignUser,jdbcType=VARCHAR},
            </if>
            <if test="approve != null">
                approve = #{approve,jdbcType=INTEGER},
            </if>
            <if test="comment != null and comment != ''">
                `comment` = #{comment,jdbcType=VARCHAR},
            </if>
        </set>
        where task_id = #{taskId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        update ac_leave_bill_comment
        set task_name = #{taskName,jdbcType=VARCHAR},
        process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
        assign_id = #{assignId,jdbcType=VARCHAR},
        assign_user = #{assignUser,jdbcType=VARCHAR},
        approve = #{approve,jdbcType=INTEGER},
        `comment` = #{comment,jdbcType=VARCHAR}
        where task_id = #{taskId,jdbcType=VARCHAR}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ac_leave_bill_comment
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="task_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.taskName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="process_instance_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.processInstanceId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="assign_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.assignId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="assign_user = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.assignUser,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="approve = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.approve,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="`comment` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when task_id = #{item.taskId,jdbcType=VARCHAR} then #{item.comment,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where task_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.taskId,jdbcType=VARCHAR}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into ac_leave_bill_comment
        (task_id, task_name, process_instance_id, assign_id, assign_user, approve, `comment`
        )
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.taskId,jdbcType=VARCHAR}, #{item.taskName,jdbcType=VARCHAR}, #{item.processInstanceId,jdbcType=VARCHAR},
            #{item.assignId,jdbcType=VARCHAR}, #{item.assignUser,jdbcType=VARCHAR}, #{item.approve,jdbcType=INTEGER},
            #{item.comment,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        insert into ac_leave_bill_comment
        (task_id, task_name, process_instance_id, assign_id, assign_user, approve, `comment`
        )
        values
        (#{taskId,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{processInstanceId,jdbcType=VARCHAR},
        #{assignId,jdbcType=VARCHAR}, #{assignUser,jdbcType=VARCHAR}, #{approve,jdbcType=INTEGER},
        #{comment,jdbcType=VARCHAR})
        on duplicate key update
        task_id = #{taskId,jdbcType=VARCHAR},
        task_name = #{taskName,jdbcType=VARCHAR},
        process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
        assign_id = #{assignId,jdbcType=VARCHAR},
        assign_user = #{assignUser,jdbcType=VARCHAR},
        approve = #{approve,jdbcType=INTEGER},
        `comment` = #{comment,jdbcType=VARCHAR}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="cn.it.ssm.act.entity.LeaveBillComment">
        <!--@mbg.generated-->
        insert into ac_leave_bill_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                task_id,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="processInstanceId != null">
                process_instance_id,
            </if>
            <if test="assignId != null">
                assign_id,
            </if>
            <if test="assignUser != null">
                assign_user,
            </if>
            <if test="approve != null">
                approve,
            </if>
            <if test="comment != null">
                `comment`,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                #{taskId,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="processInstanceId != null">
                #{processInstanceId,jdbcType=VARCHAR},
            </if>
            <if test="assignId != null">
                #{assignId,jdbcType=VARCHAR},
            </if>
            <if test="assignUser != null">
                #{assignUser,jdbcType=VARCHAR},
            </if>
            <if test="approve != null">
                #{approve,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="processInstanceId != null">
                process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
            </if>
            <if test="assignId != null">
                assign_id = #{assignId,jdbcType=VARCHAR},
            </if>
            <if test="assignUser != null">
                assign_user = #{assignUser,jdbcType=VARCHAR},
            </if>
            <if test="approve != null">
                approve = #{approve,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                `comment` = #{comment,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="findByProcessInstanceIdOrderByTaskIdDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ac_leave_bill_comment albc
        where albc.process_instance_id = #{processInstanceId,jdbcType=VARCHAR}
        order by albc.task_id desc
    </select>
</mapper>
