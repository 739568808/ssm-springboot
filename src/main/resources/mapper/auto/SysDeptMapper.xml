<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.it.ssm.sys.dao.auto.SysDeptMapper">
    <resultMap id="BaseResultMap" type="cn.it.ssm.sys.domain.auto.SysDept">
        <!--@mbg.generated-->
        <!--@Table sys_dept-->
        <id column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="available" jdbcType="INTEGER" property="available"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        dept_id, parent_id, dept_name, sort, available, description, create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="cn.it.ssm.sys.domain.auto.SysDeptExample" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_dept
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sys_dept
        where dept_id = #{deptId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from sys_dept
        where dept_id = #{deptId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.it.ssm.sys.domain.auto.SysDeptExample">
        <!--@mbg.generated-->
        delete from sys_dept
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="dept_id" keyProperty="deptId" parameterType="cn.it.ssm.sys.domain.auto.SysDept" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_dept (parent_id, dept_name, sort,
        available, description, create_time,
        update_time)
        values (#{parentId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
        #{available,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="dept_id" keyProperty="deptId" parameterType="cn.it.ssm.sys.domain.auto.SysDept" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="deptName != null and deptName != ''">
                dept_name,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="available != null">
                available,
            </if>
            <if test="description != null and description != ''">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="deptName != null and deptName != ''">
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
            <if test="description != null and description != ''">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.it.ssm.sys.domain.auto.SysDeptExample" resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from sys_dept
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update sys_dept
        <set>
            <if test="record.deptId != null">
                dept_id = #{record.deptId,jdbcType=INTEGER},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.deptName != null">
                dept_name = #{record.deptName,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.available != null">
                available = #{record.available,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update sys_dept
        set dept_id = #{record.deptId,jdbcType=INTEGER},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        dept_name = #{record.deptName,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        available = #{record.available,jdbcType=INTEGER},
        description = #{record.description,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.it.ssm.sys.domain.auto.SysDept">
        <!--@mbg.generated-->
        update sys_dept
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="deptName != null and deptName != ''">
                dept_name = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
            <if test="description != null and description != ''">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where dept_id = #{deptId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.it.ssm.sys.domain.auto.SysDept">
        <!--@mbg.generated-->
        update sys_dept
        set parent_id = #{parentId,jdbcType=INTEGER},
        dept_name = #{deptName,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        available = #{available,jdbcType=INTEGER},
        description = #{description,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where dept_id = #{deptId,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sys_dept
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.parentId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="dept_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.deptName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="sort = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.sort,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="available = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.available,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where dept_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.deptId,jdbcType=INTEGER}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update sys_dept
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.parentId != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.parentId,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="dept_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.deptName != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.deptName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sort = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.sort != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.sort,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="available = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.available != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.available,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.description != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when dept_id = #{item.deptId,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where dept_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.deptId,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="dept_id" keyProperty="deptId" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_dept
        (parent_id, dept_name, sort, available, description, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.parentId,jdbcType=INTEGER}, #{item.deptName,jdbcType=VARCHAR}, #{item.sort,jdbcType=INTEGER},
            #{item.available,jdbcType=INTEGER}, #{item.description,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="dept_id" keyProperty="deptId" parameterType="cn.it.ssm.sys.domain.auto.SysDept" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                dept_id,
            </if>
            parent_id,
            dept_name,
            sort,
            available,
            description,
            create_time,
            update_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            #{parentId,jdbcType=INTEGER},
            #{deptName,jdbcType=VARCHAR},
            #{sort,jdbcType=INTEGER},
            #{available,jdbcType=INTEGER},
            #{description,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            parent_id = #{parentId,jdbcType=INTEGER},
            dept_name = #{deptName,jdbcType=VARCHAR},
            sort = #{sort,jdbcType=INTEGER},
            available = #{available,jdbcType=INTEGER},
            description = #{description,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="dept_id" keyProperty="deptId" parameterType="cn.it.ssm.sys.domain.auto.SysDept" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="deptName != null">
                dept_name,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="available != null">
                available,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="deptName != null">
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="deptName != null">
                dept_name = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
</mapper>
